## Read data to vector mc1 read.delim
mData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetSub = subset(mData, landuse== "Grassland");
grazedSub = subset(mData, landuse== "Agriculture");
grazedSub30 = subset(grazedSub, Sam_Dist== "30");
library(gstat)
var1 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = skeetSub)
var2 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = grazedSub30)
mod1 <- fit.variogram(var1, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
mod2 <- fit.variogram(var2, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
library(sp)
library(ggplot2)
y <- c(800, 800, 0, 0)
x <- c(0, 500, 500, 0)
xym <- cbind(x, y)
# create spatial polygon
library(sp)
p <- Polygon(xym)
ps <- Polygons(list(p), 1)
# create objects of class SpatialPolygons or SpatialPolygonsDataFrame from lists of Polygons objects and
# data.frames
sps <- SpatialPolygons(list(ps))
grid_x_y <- as.data.frame(spsample(sps, n = 5000, "regular"))
# set column names to be identical on both datasets, the one containing the original measurement data and
# the one conatinaing the prediction locations
colnames(grid_x_y) <- c("x", "y")
coordinates(grid_x_y) <- ~x + y
skeetSub <- skeetSub[-zerodist(skeetSub)[,1],]
rData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetR = subset(rData, landuse== "Grassland");
grazedR = subset(rData, landuse== "Agriculture");
grazedR30 = subset(grazedR, Sam_Dist== "30");
skeetR <- dplyr::distinct(skeetR)
coordinates(skeetR) <- ~ x.axis + y.axis
mod1.kriged <- krige((Total_C) ~ 1, skeetR, grid_x_y, model=mod1)
frame_mod1.kriged<-as.data.frame(mod1.kriged)
View(frame_mod1.kriged)
View(grazedR)
View(skeetR)
rData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetR = subset(rData, landuse== "Grassland");
grazedR = subset(rData, landuse== "Agriculture");
grazedR30 = subset(grazedR, Sam_Dist== "30");
str(skeetR)
rData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetR = subset(rData, landuse== "Grassland");
grazedR = subset(rData, landuse== "Agriculture");
grazedR30 = subset(grazedR, Sam_Dist== "30");
skeetR <- dplyr::distinct(skeetR)
coordinates(skeetR) <- ~ x.axis + y.axis
mod1.kriged <- krige((Total_C) ~ 1, skeetR, grid_x_y, model=mod1)
frame_mod1.kriged<-as.data.frame(mod1.kriged)
View(frame_mod1.kriged)
View(frame_mod1.kriged)
grazedSub30 <- dplyr::distinct(grazedSub30) # REMOVES DUPLICATED GRID POINTS
coordinates(grazedSub30) <- ~ x.axis + y.axis
mod2.kriged <- krige((Total_C) ~ 1, grazedSub30, grid_x_y, model=mod2)
frame_mod2.kriged<-as.data.frame(mod2.kriged)
View(frame_mod2.kriged)
warning()
skeetR <- dplyr::distinct(skeetR)
rData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetR = subset(rData, landuse== "Grassland");
grazedR = subset(rData, landuse== "Agriculture");
grazedR30 = subset(grazedR, Sam_Dist== "30");
y <- c(800, 800, 0, 0)
x <- c(0, 500, 500, 0)
xym <- cbind(x, y)
# create spatial polygon
library(sp)
p <- Polygon(xym)
ps <- Polygons(list(p), 1)
# create objects of class SpatialPolygons or SpatialPolygonsDataFrame from lists of Polygons objects and
# data.frames
sps <- SpatialPolygons(list(ps))
grid_x_y <- as.data.frame(spsample(sps, n = 5000, "regular"))
# set column names to be identical on both datasets, the one containing the original measurement data and
# the one conatinaing the prediction locations
colnames(grid_x_y) <- c("x", "y")
coordinates(grid_x_y) <- ~x + y
## Read data to vector mc1 read.delim
mData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetSub = subset(mData, landuse== "Grassland");
grazedSub = subset(mData, landuse== "Agriculture");
grazedSub30 = subset(grazedSub, Sam_Dist== "30");
library(gstat)
var1 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = skeetSub)
var2 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = grazedSub30)
plot(var1, plot.numbers = TRUE, xlab = "Distance", ylab = "Semivariance", cex = 1, cex.axis = 2, xlim=c(0, 550), ylim=c(0.0, 0.25))
mod1 <- fit.variogram(var1, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
mod2 <- fit.variogram(var2, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
mod1
attr(mod1, "SSErr")
mod2
attr(mod2, "SSErr")
plot(var1, plot.numbers = TRUE, model = mod1, xlab = "Distance", ylab = "Semivariance", xlim=c(0, 550), ylim=c(0.0, 0.25), pch = 19,
bg = "lightgray", col = "red",  lwd = 0.9, cex = 1.5)
plot(var2, plot.numbers = TRUE, model = mod2, xlab = "Distance", ylab = "Semivariance", xlim=c(0, 550), ylim=c(0.0, 1.0), pch = 19,
bg = "lightgray", col = "black",  lwd = 0.9, cex = 1.5)
library(sp)
library(ggplot2)
y <- c(800, 800, 0, 0)
x <- c(0, 500, 500, 0)
xym <- cbind(x, y)
# create spatial polygon
library(sp)
p <- Polygon(xym)
ps <- Polygons(list(p), 1)
# create objects of class SpatialPolygons or SpatialPolygonsDataFrame from lists of Polygons objects and
# data.frames
sps <- SpatialPolygons(list(ps))
grid_x_y <- as.data.frame(spsample(sps, n = 5000, "regular"))
# set column names to be identical on both datasets, the one containing the original measurement data and
# the one conatinaing the prediction locations
colnames(grid_x_y) <- c("x", "y")
coordinates(grid_x_y) <- ~x + y
rData <- read.table("C:/Users/en-y/Documents/GitHub/science/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetR = subset(rData, landuse== "Grassland");
grazedR = subset(rData, landuse== "Agriculture");
grazedR30 = subset(grazedR, Sam_Dist== "30");
skeetR <- dplyr::distinct(skeetR)
skeetR<- skeetR[-zerodist(skeetR)[,1],]
skeetR <- dplyr::distinct(skeetR)
coordinates(skeetR) <- ~ x.axis + y.axis
mod1.kriged <- krige((Total_C) ~ 1, skeetR, grid_x_y, model=mod1)
frame_mod1.kriged<-as.data.frame(mod1.kriged)
View(frame_mod1.kriged)
