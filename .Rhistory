## Read data to vector mc1 read.delim
mData <- read.table("C:/Users/en-y/OneDrive - Rutgers University/Statistics/R Scripts/Duke Field Data/Data.txt", fill = TRUE,  header = T, sep = "\t")
skeetSub = subset(mData, landuse== "Grassland");
grazedSub = subset(mData, landuse== "Agriculture");
library(gstat)
var1 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = skeetSub)
var2 <- variogram(Total_C ~ 1, ~x.axis + y.axis, cutoff = 480, width = 55, data = grazedSub)
mod1 <- fit.variogram(var1, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
mod2 <- fit.variogram(var2, vgm(psill = NA, "Exp", range = NA, 1), fit.sills = TRUE, fit.ranges = TRUE, fit.method = 1)
library(sp)
library(ggplot2)
y <- c(800, 800, 0, 0)
x <- c(0, 500, 500, 0)
xym <- cbind(x, y)
# create spatial polygon
library(sp)
p <- Polygon(xym)
ps <- Polygons(list(p), 1)
# create objects of class SpatialPolygons or SpatialPolygonsDataFrame from lists of Polygons objects and
# data.frames
sps <- SpatialPolygons(list(ps))
grid_x_y <- as.data.frame(spsample(sps, n = 5000, "regular"))
# set column names to be identical on both datasets, the one containing the original measurement data and
# the one conatinaing the prediction locations
colnames(grid_x_y) <- c("x", "y")
coordinates(grid_x_y) <- ~x + y
skeetSub <- dplyr::distinct(skeetSub)
coordinates(skeetSub) <- ~ x.axis + y.axis
mod1.kriged <- krige((Total_C) ~ 1, skeetSub, grid_x_y, model=mod1)
frame_mod1.kriged<-as.data.frame(mod1.kriged)
grazedSub <- dplyr::distinct(grazedSub) # REMOVES DUPLICATED GRID POINTS
coordinates(grazedSub) <- ~ x.axis + y.axis
mod2.kriged <- krige((Total_C) ~ 1, grazedSub, grid_x_y, model=mod2)
frame_mod2.kriged<-as.data.frame(mod2.kriged)
View(frame_mod2.kriged)
View(frame_mod1.kriged)
grazedSub <- dplyr::distinct(grazedSub) # REMOVES DUPLICATED GRID POINTS
mod2.kriged <- krige((Total_C) ~ 1, grazedSub, grid_x_y, model=mod2)
frame_mod2.kriged<-as.data.frame(mod2.kriged)
summary(grazedSub)
install.packages("mapview")
install.packages("gdtools")
install.packages(c("broom", "cachem", "callr", "cli", "cpp11", "dbplyr", "desc", "diffobj", "dplyr", "e1071", "gstat", "isoband", "labelled", "lubridate", "magick", "packrat", "pkgload", "processx", "remotes", "reprex", "rsconnect", "rvest", "sf", "styler", "tidyr", "tinytex", "units", "utf8", "vctrs", "waldo", "xaringan", "xfun", "zoo"))
